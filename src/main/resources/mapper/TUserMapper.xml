<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.springsecurity.wdtest.dao.TUserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.springsecurity.wdtest.model.TUser">
    <id column="uid" jdbcType="BIGINT" property="uid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="vsername" jdbcType="VARCHAR" property="vsername" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="head_url" jdbcType="VARCHAR" property="headUrl" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="group" jdbcType="VARCHAR" property="group" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="geographic" jdbcType="VARCHAR" property="geographic" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where `uid` = #{uid,jdbcType=BIGINT}
  </delete>
  <!--<insert id="insert" parameterType="com.example.demo.springsecurity.wdtest.model.TUser">
    <selectKey keyProperty="uid" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_user (username, `password`, salt, 
      vsername, mobile, email, 
      create_time, head_url, signature, 
      title, `group`, country, 
      geographic, address, tags
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{vsername,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{headUrl,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{group,jdbcType=VARCHAR}, #{country,jdbcType=VARCHAR}, 
      #{geographic,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}
      )
  </insert>-->
  <update id="updateByPrimaryKey" parameterType="com.example.demo.springsecurity.wdtest.model.TUser">
    update t_user
    set username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      vsername = #{vsername,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      head_url = #{headUrl,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      `group` = #{group,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      geographic = #{geographic,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR}
    where `uid` = #{uid,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select `uid`, username, `password`, salt, vsername, mobile, email, create_time, head_url, 
    signature, title, `group`, country, geographic, address, tags
    from t_user
    where `uid` = #{uid,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select `uid`, username, `password`, salt, vsername, mobile, email, create_time, head_url, 
    signature, title, `group`, country, geographic, address, tags
    from t_user
  </select>

<select id="getCurrentUserByTicket" parameterType="string" resultMap="BaseResultMap">
  select `uid`, username, `password`, salt, vsername, mobile, email, create_time, head_url,
    signature, title, `group`, country, geographic, address, tags
  from t_user
  where `uid` = (SELECT t.uid FROM t_login_ticket t WHERE t.ticket = #{ticket} )

</select>
  
  <select id="getUserByName" parameterType="string" resultMap="BaseResultMap">
    select `uid`, username, `password`, salt, vsername, mobile, email, create_time, head_url,
      signature, title, `group`, country, geographic, address, tags
    from t_user
    where username = #{username}
  </select>




</mapper>